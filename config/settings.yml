---
:ems_refresh:
  :openstack:
    :is_admin: false
    :heat:
      :is_global_admin: false
    :parallel_thread_limit: 0
  :openstack_network:
    :is_admin: false
    :inventory_object_refresh: true
  :openstack_infra:
    :is_admin: false
    :inventory_object_refresh: true
  :cinder:
    :is_admin: false
:ems:
  :ems_openstack:
    :excon:
      :omit_default_port: true
      :read_timeout: 60
    :blacklisted_event_names: []
    :event_handling:
      :event_backread_seconds: 5
      :event_skip_history: false
      :event_groups:
        :addition:
          :critical:
          - aggregate.addhost.end
          - aggregate.create.end
          - aggregate.removehost.end
          - aggregate.updateprop.end
          - aggregate.updatemetadata.end
          - identity.project.created
          - identity.project.deleted
          - identity.project.updated
          - image.update
          - image.create
          - image.upload
          - orchestration.stack.create.end
          - orchestration.stack.create.error
          - servergroup.create
        :configuration:
          :critical:
          - compute.instance.rebuild.end
          - compute.instance.resize.end
          - orchestration.stack.update.end
          - orchestration.stack.update.error
          - orchestration.stack.suspend.end
          - orchestration.stack.suspend.error
          - orchestration.stack.resume.end
          - orchestration.stack.resume.error
          - orchestration.autoscaling.end
          - orchestration.autoscaling.error
          - servergroup.update
          - servergroup.addmemeber
        :deletion:
          :critical:
          - aggregate.delete.end
          - image.delete
          - orchestration.stack.delete.end
          - orchestration.stack.delete.error
          - servergroup.delete
        :general:
          :critical:
          - hardware.ipmi.metrics.update
        :network:
          :critical:
          - floatingip.create.end
          - floatingip.delete.end
          - floatingip.update.end
          - network.create.end
          - network.delete.end
          - network.floating_ip.allocate
          - network.floating_ip.deallocate
          - network.floating_ip.associate
          - network.floating_ip.disassociate
          - network.update.end
          - router.create.end
          - router.delete.end
          - router.interface.create
          - router.interface.delete
          - router.update.end
          - security_group.create.end
          - security_group.delete.end
          - security_group.update.end
          - security_group_rule.create.end
          - security_group_rule.delete.end
          - security_group_rule.update.end
          - subnet.create.end
          - subnet.delete.end
          - subnet.update.end
        :power:
          :critical:
          - compute.instance.create.end
          - compute.instance.create.error
          - compute.instance.shutdown.end
          - compute.instance.shutdown.error
          - compute.instance.delete.end
          - compute.instance.power_off.end
          - compute.instance.power_on.end
          - compute.instance.soft_delete.end
          - compute.instance.reboot.end
          - compute.instance.suspend
          - compute.instance.resume
          - compute.instance.pause.end
          - compute.instance.unpause.end
          - compute.instance.shelve.end
          - compute.instance.unshelve.end
          - compute.instance.shelve_offload.end
        :snapshot:
          :critical:
          - compute.instance.snapshot.end
        :storage:
          :critical:
          - backup.create.start
          - backup.create.end
          - backup.restore.start
          - backup.restore.end
          - snapshot.create.start
          - snapshot.create.end
          - snapshot.delete.end
          - snapshot.update.end
          - volume.create.end
          - volume.delete.end
:http_proxy:
  :openstack:
    :host:
    :password:
    :port:
    :user:
:workers:
  :worker_base:
    :event_catcher:
      :event_catcher_openstack:
        :poll: 15.seconds
        :topics:
          :nova: notifications.*
          :cinder: notifications.*
          :glance: notifications.*
          :heat: notifications.*
        :duration: 10.seconds
        :capacity: 50
        :amqp_port: 5672
        :amqp_heartbeat: 30
        :amqp_recovery_attempts: 4
        :amqp_vhost: '/'
        :ceilometer:
          :event_types_regex: '\A(?!firewall|floatingip|gateway|net|port|router|subnet|security_group|vpn|volume|snapshot|backup)'
      :event_catcher_openstack_cinder:
        :poll: 15.seconds
        :topics:
          :nova: notifications.*
          :cinder: notifications.*
          :glance: notifications.*
          :heat: notifications.*
        :duration: 10.seconds
        :capacity: 50
        :amqp_port: 5672
        :amqp_heartbeat: 30
        :amqp_recovery_attempts: 4
        :amqp_vhost: '/'
        :ceilometer:
          :event_types_regex: '\A(volume|snapshot|backup)'
      :event_catcher_openstack_infra:
        :poll: 15.seconds
        :topics:
          :nova: notifications.*
          :cinder: notifications.*
          :glance: notifications.*
          :heat: notifications.*
          :ironic: notifications.*
        :duration: 10.seconds
        :capacity: 50
        :amqp_port: 5672
        :amqp_heartbeat: 30
        :amqp_recovery_attempts: 4
        :amqp_vhost: '/'
        :ceilometer:
          :event_types_regex: '\A(?!firewall|floatingip|gateway|net|port|router|subnet|security_group|vpn)'
      :event_catcher_openstack_network:
        :poll: 15.seconds
        :topics:
          :neutron: "notifications.*"
        :duration: 10.seconds
        :capacity: 50
        :amqp_port: 5672
        :amqp_heartbeat: 30
        :amqp_recovery_attempts: 4
        :amqp_vhost: '/'
        :ceilometer:
          :event_types_regex: '\A(firewall|floatingip|gateway|net|port|router|subnet|security_group|security_group_rule|vpn)'
      :event_catcher_openstack_service: "auto"
    :queue_worker_base:
      :ems_metrics_collector_worker:
        :ems_metrics_collector_worker_openstack: {}
        :ems_metrics_collector_worker_openstack_infra: {}
        :ems_metrics_openstack_default_service: "auto"
        :ems_metrics_gnocchi_granularity: 300
      :ems_refresh_worker:
        :ems_refresh_worker_openstack: {}
        :ems_refresh_worker_openstack_infra: {}
        :ems_refresh_worker_openstack_network: {}
